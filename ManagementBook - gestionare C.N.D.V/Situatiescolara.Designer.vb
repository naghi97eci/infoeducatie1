'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.7905
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("Situatiescolara"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class Situatiescolara
    Inherits Global.System.Data.DataSet
    
    Private tableSituatiescolara As SituatiescolaraDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Situatiescolara")) Is Nothing) Then
                MyBase.Tables.Add(New SituatiescolaraDataTable(ds.Tables("Situatiescolara")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property _Situatiescolara() As SituatiescolaraDataTable
        Get
            Return Me.tableSituatiescolara
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As Situatiescolara = CType(MyBase.Clone,Situatiescolara)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("Situatiescolara")) Is Nothing) Then
                MyBase.Tables.Add(New SituatiescolaraDataTable(ds.Tables("Situatiescolara")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableSituatiescolara = CType(MyBase.Tables("Situatiescolara"),SituatiescolaraDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSituatiescolara) Is Nothing) Then
                Me.tableSituatiescolara.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "Situatiescolara"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/Situatiescolara.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableSituatiescolara = New SituatiescolaraDataTable
        MyBase.Tables.Add(Me.tableSituatiescolara)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerialize_Situatiescolara() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As Situatiescolara = New Situatiescolara
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub SituatiescolaraRowChangeEventHandler(ByVal sender As Object, ByVal e As SituatiescolaraRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SituatiescolaraDataTable
        Inherits Global.System.Data.TypedTableBase(Of SituatiescolaraRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnNume As Global.System.Data.DataColumn
        
        Private columnPrenume As Global.System.Data.DataColumn
        
        Private columnClasa As Global.System.Data.DataColumn
        
        Private columnDiriginte As Global.System.Data.DataColumn
        
        Private columnm1 As Global.System.Data.DataColumn
        
        Private columnm2 As Global.System.Data.DataColumn
        
        Private columnm3 As Global.System.Data.DataColumn
        
        Private columnm4 As Global.System.Data.DataColumn
        
        Private columnm5 As Global.System.Data.DataColumn
        
        Private columnm6 As Global.System.Data.DataColumn
        
        Private columnm7 As Global.System.Data.DataColumn
        
        Private columnm8 As Global.System.Data.DataColumn
        
        Private columnm9 As Global.System.Data.DataColumn
        
        Private columnm10 As Global.System.Data.DataColumn
        
        Private columnm11 As Global.System.Data.DataColumn
        
        Private columnm12 As Global.System.Data.DataColumn
        
        Private columnm13 As Global.System.Data.DataColumn
        
        Private columnm14 As Global.System.Data.DataColumn
        
        Private columnm15 As Global.System.Data.DataColumn
        
        Private columnm16 As Global.System.Data.DataColumn
        
        Private columnm17 As Global.System.Data.DataColumn
        
        Private columnm18 As Global.System.Data.DataColumn
        
        Private columnm19 As Global.System.Data.DataColumn
        
        Private columnm20 As Global.System.Data.DataColumn
        
        Private columnm21 As Global.System.Data.DataColumn
        
        Private columnm22 As Global.System.Data.DataColumn
        
        Private columnm23 As Global.System.Data.DataColumn
        
        Private columnm24 As Global.System.Data.DataColumn
        
        Private columnm25 As Global.System.Data.DataColumn
        
        Private columnn1 As Global.System.Data.DataColumn
        
        Private columnn2 As Global.System.Data.DataColumn
        
        Private columnn3 As Global.System.Data.DataColumn
        
        Private columnn4 As Global.System.Data.DataColumn
        
        Private columnn5 As Global.System.Data.DataColumn
        
        Private columnn6 As Global.System.Data.DataColumn
        
        Private columnn7 As Global.System.Data.DataColumn
        
        Private columnn8 As Global.System.Data.DataColumn
        
        Private columnn9 As Global.System.Data.DataColumn
        
        Private columnn10 As Global.System.Data.DataColumn
        
        Private columnn11 As Global.System.Data.DataColumn
        
        Private columnn12 As Global.System.Data.DataColumn
        
        Private columnn13 As Global.System.Data.DataColumn
        
        Private columnn14 As Global.System.Data.DataColumn
        
        Private columnn15 As Global.System.Data.DataColumn
        
        Private columnn16 As Global.System.Data.DataColumn
        
        Private columnn17 As Global.System.Data.DataColumn
        
        Private columnn18 As Global.System.Data.DataColumn
        
        Private columnn19 As Global.System.Data.DataColumn
        
        Private columnn20 As Global.System.Data.DataColumn
        
        Private columnn21 As Global.System.Data.DataColumn
        
        Private columnn22 As Global.System.Data.DataColumn
        
        Private columnn23 As Global.System.Data.DataColumn
        
        Private columnn24 As Global.System.Data.DataColumn
        
        Private columnn25 As Global.System.Data.DataColumn
        
        Private columnSemestrul_1 As Global.System.Data.DataColumn
        
        Private columnSemestrul_2 As Global.System.Data.DataColumn
        
        Private columnMedie_Anuala As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Situatiescolara"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNume
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrenumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrenume
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ClasaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClasa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DiriginteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiriginte
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm19
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m21Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm21
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m22Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm22
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m23Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm23
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m24Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm24
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m25Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnm25
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn19
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n21Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn21
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n22Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn22
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n23Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn23
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n24Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn24
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n25Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnn25
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Semestrul_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSemestrul_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Semestrul_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSemestrul_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Medie_AnualaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMedie_Anuala
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SituatiescolaraRow
            Get
                Return CType(Me.Rows(index),SituatiescolaraRow)
            End Get
        End Property
        
        Public Event SituatiescolaraRowChanging As SituatiescolaraRowChangeEventHandler
        
        Public Event SituatiescolaraRowChanged As SituatiescolaraRowChangeEventHandler
        
        Public Event SituatiescolaraRowDeleting As SituatiescolaraRowChangeEventHandler
        
        Public Event SituatiescolaraRowDeleted As SituatiescolaraRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSituatiescolaraRow(ByVal row As SituatiescolaraRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSituatiescolaraRow( _
                    ByVal ID As String,  _
                    ByVal Nume As String,  _
                    ByVal Prenume As String,  _
                    ByVal Clasa As String,  _
                    ByVal Diriginte As String,  _
                    ByVal m1 As String,  _
                    ByVal m2 As String,  _
                    ByVal m3 As String,  _
                    ByVal m4 As String,  _
                    ByVal m5 As String,  _
                    ByVal m6 As String,  _
                    ByVal m7 As String,  _
                    ByVal m8 As String,  _
                    ByVal m9 As String,  _
                    ByVal m10 As String,  _
                    ByVal m11 As String,  _
                    ByVal m12 As String,  _
                    ByVal m13 As String,  _
                    ByVal m14 As String,  _
                    ByVal m15 As String,  _
                    ByVal m16 As String,  _
                    ByVal m17 As String,  _
                    ByVal m18 As String,  _
                    ByVal m19 As String,  _
                    ByVal m20 As String,  _
                    ByVal m21 As String,  _
                    ByVal m22 As String,  _
                    ByVal m23 As String,  _
                    ByVal m24 As String,  _
                    ByVal m25 As String,  _
                    ByVal n1 As String,  _
                    ByVal n2 As String,  _
                    ByVal n3 As String,  _
                    ByVal n4 As String,  _
                    ByVal n5 As String,  _
                    ByVal n6 As String,  _
                    ByVal n7 As String,  _
                    ByVal n8 As String,  _
                    ByVal n9 As String,  _
                    ByVal n10 As String,  _
                    ByVal n11 As String,  _
                    ByVal n12 As String,  _
                    ByVal n13 As String,  _
                    ByVal n14 As String,  _
                    ByVal n15 As String,  _
                    ByVal n16 As String,  _
                    ByVal n17 As String,  _
                    ByVal n18 As String,  _
                    ByVal n19 As String,  _
                    ByVal n20 As String,  _
                    ByVal n21 As String,  _
                    ByVal n22 As String,  _
                    ByVal n23 As String,  _
                    ByVal n24 As String,  _
                    ByVal n25 As String,  _
                    ByVal Semestrul_1 As String,  _
                    ByVal Semestrul_2 As String,  _
                    ByVal Medie_Anuala As String) As SituatiescolaraRow
            Dim rowSituatiescolaraRow As SituatiescolaraRow = CType(Me.NewRow,SituatiescolaraRow)
            Dim columnValuesArray() As Object = New Object() {ID, Nume, Prenume, Clasa, Diriginte, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15, m16, m17, m18, m19, m20, m21, m22, m23, m24, m25, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, Semestrul_1, Semestrul_2, Medie_Anuala}
            rowSituatiescolaraRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSituatiescolaraRow)
            Return rowSituatiescolaraRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SituatiescolaraDataTable = CType(MyBase.Clone,SituatiescolaraDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SituatiescolaraDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnNume = MyBase.Columns("Nume")
            Me.columnPrenume = MyBase.Columns("Prenume")
            Me.columnClasa = MyBase.Columns("Clasa")
            Me.columnDiriginte = MyBase.Columns("Diriginte")
            Me.columnm1 = MyBase.Columns("m1")
            Me.columnm2 = MyBase.Columns("m2")
            Me.columnm3 = MyBase.Columns("m3")
            Me.columnm4 = MyBase.Columns("m4")
            Me.columnm5 = MyBase.Columns("m5")
            Me.columnm6 = MyBase.Columns("m6")
            Me.columnm7 = MyBase.Columns("m7")
            Me.columnm8 = MyBase.Columns("m8")
            Me.columnm9 = MyBase.Columns("m9")
            Me.columnm10 = MyBase.Columns("m10")
            Me.columnm11 = MyBase.Columns("m11")
            Me.columnm12 = MyBase.Columns("m12")
            Me.columnm13 = MyBase.Columns("m13")
            Me.columnm14 = MyBase.Columns("m14")
            Me.columnm15 = MyBase.Columns("m15")
            Me.columnm16 = MyBase.Columns("m16")
            Me.columnm17 = MyBase.Columns("m17")
            Me.columnm18 = MyBase.Columns("m18")
            Me.columnm19 = MyBase.Columns("m19")
            Me.columnm20 = MyBase.Columns("m20")
            Me.columnm21 = MyBase.Columns("m21")
            Me.columnm22 = MyBase.Columns("m22")
            Me.columnm23 = MyBase.Columns("m23")
            Me.columnm24 = MyBase.Columns("m24")
            Me.columnm25 = MyBase.Columns("m25")
            Me.columnn1 = MyBase.Columns("n1")
            Me.columnn2 = MyBase.Columns("n2")
            Me.columnn3 = MyBase.Columns("n3")
            Me.columnn4 = MyBase.Columns("n4")
            Me.columnn5 = MyBase.Columns("n5")
            Me.columnn6 = MyBase.Columns("n6")
            Me.columnn7 = MyBase.Columns("n7")
            Me.columnn8 = MyBase.Columns("n8")
            Me.columnn9 = MyBase.Columns("n9")
            Me.columnn10 = MyBase.Columns("n10")
            Me.columnn11 = MyBase.Columns("n11")
            Me.columnn12 = MyBase.Columns("n12")
            Me.columnn13 = MyBase.Columns("n13")
            Me.columnn14 = MyBase.Columns("n14")
            Me.columnn15 = MyBase.Columns("n15")
            Me.columnn16 = MyBase.Columns("n16")
            Me.columnn17 = MyBase.Columns("n17")
            Me.columnn18 = MyBase.Columns("n18")
            Me.columnn19 = MyBase.Columns("n19")
            Me.columnn20 = MyBase.Columns("n20")
            Me.columnn21 = MyBase.Columns("n21")
            Me.columnn22 = MyBase.Columns("n22")
            Me.columnn23 = MyBase.Columns("n23")
            Me.columnn24 = MyBase.Columns("n24")
            Me.columnn25 = MyBase.Columns("n25")
            Me.columnSemestrul_1 = MyBase.Columns("Semestrul 1")
            Me.columnSemestrul_2 = MyBase.Columns("Semestrul 2")
            Me.columnMedie_Anuala = MyBase.Columns("Medie Anuala")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnNume = New Global.System.Data.DataColumn("Nume", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNume)
            Me.columnPrenume = New Global.System.Data.DataColumn("Prenume", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrenume)
            Me.columnClasa = New Global.System.Data.DataColumn("Clasa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClasa)
            Me.columnDiriginte = New Global.System.Data.DataColumn("Diriginte", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiriginte)
            Me.columnm1 = New Global.System.Data.DataColumn("m1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm1)
            Me.columnm2 = New Global.System.Data.DataColumn("m2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm2)
            Me.columnm3 = New Global.System.Data.DataColumn("m3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm3)
            Me.columnm4 = New Global.System.Data.DataColumn("m4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm4)
            Me.columnm5 = New Global.System.Data.DataColumn("m5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm5)
            Me.columnm6 = New Global.System.Data.DataColumn("m6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm6)
            Me.columnm7 = New Global.System.Data.DataColumn("m7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm7)
            Me.columnm8 = New Global.System.Data.DataColumn("m8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm8)
            Me.columnm9 = New Global.System.Data.DataColumn("m9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm9)
            Me.columnm10 = New Global.System.Data.DataColumn("m10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm10)
            Me.columnm11 = New Global.System.Data.DataColumn("m11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm11)
            Me.columnm12 = New Global.System.Data.DataColumn("m12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm12)
            Me.columnm13 = New Global.System.Data.DataColumn("m13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm13)
            Me.columnm14 = New Global.System.Data.DataColumn("m14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm14)
            Me.columnm15 = New Global.System.Data.DataColumn("m15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm15)
            Me.columnm16 = New Global.System.Data.DataColumn("m16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm16)
            Me.columnm17 = New Global.System.Data.DataColumn("m17", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm17)
            Me.columnm18 = New Global.System.Data.DataColumn("m18", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm18)
            Me.columnm19 = New Global.System.Data.DataColumn("m19", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm19)
            Me.columnm20 = New Global.System.Data.DataColumn("m20", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm20)
            Me.columnm21 = New Global.System.Data.DataColumn("m21", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm21)
            Me.columnm22 = New Global.System.Data.DataColumn("m22", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm22)
            Me.columnm23 = New Global.System.Data.DataColumn("m23", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm23)
            Me.columnm24 = New Global.System.Data.DataColumn("m24", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm24)
            Me.columnm25 = New Global.System.Data.DataColumn("m25", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm25)
            Me.columnn1 = New Global.System.Data.DataColumn("n1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn1)
            Me.columnn2 = New Global.System.Data.DataColumn("n2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn2)
            Me.columnn3 = New Global.System.Data.DataColumn("n3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn3)
            Me.columnn4 = New Global.System.Data.DataColumn("n4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn4)
            Me.columnn5 = New Global.System.Data.DataColumn("n5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn5)
            Me.columnn6 = New Global.System.Data.DataColumn("n6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn6)
            Me.columnn7 = New Global.System.Data.DataColumn("n7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn7)
            Me.columnn8 = New Global.System.Data.DataColumn("n8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn8)
            Me.columnn9 = New Global.System.Data.DataColumn("n9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn9)
            Me.columnn10 = New Global.System.Data.DataColumn("n10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn10)
            Me.columnn11 = New Global.System.Data.DataColumn("n11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn11)
            Me.columnn12 = New Global.System.Data.DataColumn("n12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn12)
            Me.columnn13 = New Global.System.Data.DataColumn("n13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn13)
            Me.columnn14 = New Global.System.Data.DataColumn("n14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn14)
            Me.columnn15 = New Global.System.Data.DataColumn("n15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn15)
            Me.columnn16 = New Global.System.Data.DataColumn("n16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn16)
            Me.columnn17 = New Global.System.Data.DataColumn("n17", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn17)
            Me.columnn18 = New Global.System.Data.DataColumn("n18", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn18)
            Me.columnn19 = New Global.System.Data.DataColumn("n19", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn19)
            Me.columnn20 = New Global.System.Data.DataColumn("n20", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn20)
            Me.columnn21 = New Global.System.Data.DataColumn("n21", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn21)
            Me.columnn22 = New Global.System.Data.DataColumn("n22", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn22)
            Me.columnn23 = New Global.System.Data.DataColumn("n23", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn23)
            Me.columnn24 = New Global.System.Data.DataColumn("n24", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn24)
            Me.columnn25 = New Global.System.Data.DataColumn("n25", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn25)
            Me.columnSemestrul_1 = New Global.System.Data.DataColumn("Semestrul 1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSemestrul_1)
            Me.columnSemestrul_2 = New Global.System.Data.DataColumn("Semestrul 2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSemestrul_2)
            Me.columnMedie_Anuala = New Global.System.Data.DataColumn("Medie Anuala", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMedie_Anuala)
            Me.columnID.MaxLength = 50
            Me.columnNume.MaxLength = 50
            Me.columnPrenume.MaxLength = 50
            Me.columnClasa.MaxLength = 50
            Me.columnDiriginte.MaxLength = 50
            Me.columnm1.MaxLength = 50
            Me.columnm2.MaxLength = 50
            Me.columnm3.MaxLength = 50
            Me.columnm4.MaxLength = 50
            Me.columnm5.MaxLength = 50
            Me.columnm6.MaxLength = 50
            Me.columnm7.MaxLength = 50
            Me.columnm8.MaxLength = 50
            Me.columnm9.MaxLength = 50
            Me.columnm10.MaxLength = 50
            Me.columnm11.MaxLength = 50
            Me.columnm12.MaxLength = 50
            Me.columnm13.MaxLength = 50
            Me.columnm14.MaxLength = 50
            Me.columnm15.MaxLength = 50
            Me.columnm16.MaxLength = 50
            Me.columnm17.MaxLength = 50
            Me.columnm18.MaxLength = 50
            Me.columnm19.MaxLength = 50
            Me.columnm20.MaxLength = 50
            Me.columnm21.MaxLength = 50
            Me.columnm22.MaxLength = 50
            Me.columnm23.MaxLength = 50
            Me.columnm24.MaxLength = 50
            Me.columnm25.MaxLength = 50
            Me.columnn1.MaxLength = 50
            Me.columnn2.MaxLength = 50
            Me.columnn3.MaxLength = 50
            Me.columnn4.MaxLength = 50
            Me.columnn5.MaxLength = 50
            Me.columnn6.MaxLength = 50
            Me.columnn7.MaxLength = 50
            Me.columnn8.MaxLength = 50
            Me.columnn9.MaxLength = 50
            Me.columnn10.MaxLength = 50
            Me.columnn11.MaxLength = 50
            Me.columnn12.MaxLength = 50
            Me.columnn13.MaxLength = 50
            Me.columnn14.MaxLength = 50
            Me.columnn15.MaxLength = 50
            Me.columnn16.MaxLength = 50
            Me.columnn17.MaxLength = 50
            Me.columnn18.MaxLength = 50
            Me.columnn19.MaxLength = 50
            Me.columnn20.MaxLength = 50
            Me.columnn21.MaxLength = 50
            Me.columnn22.MaxLength = 50
            Me.columnn23.MaxLength = 50
            Me.columnn24.MaxLength = 50
            Me.columnn25.MaxLength = 50
            Me.columnSemestrul_1.AllowDBNull = false
            Me.columnSemestrul_1.MaxLength = 50
            Me.columnSemestrul_2.MaxLength = 50
            Me.columnMedie_Anuala.MaxLength = 50
            Me.ExtendedProperties.Add("Generator_TablePropName", "_Situatiescolara")
            Me.ExtendedProperties.Add("Generator_UserTableName", "Situatiescolara")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSituatiescolaraRow() As SituatiescolaraRow
            Return CType(Me.NewRow,SituatiescolaraRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SituatiescolaraRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SituatiescolaraRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SituatiescolaraRowChangedEvent) Is Nothing) Then
                RaiseEvent SituatiescolaraRowChanged(Me, New SituatiescolaraRowChangeEvent(CType(e.Row,SituatiescolaraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SituatiescolaraRowChangingEvent) Is Nothing) Then
                RaiseEvent SituatiescolaraRowChanging(Me, New SituatiescolaraRowChangeEvent(CType(e.Row,SituatiescolaraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SituatiescolaraRowDeletedEvent) Is Nothing) Then
                RaiseEvent SituatiescolaraRowDeleted(Me, New SituatiescolaraRowChangeEvent(CType(e.Row,SituatiescolaraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SituatiescolaraRowDeletingEvent) Is Nothing) Then
                RaiseEvent SituatiescolaraRowDeleting(Me, New SituatiescolaraRowChangeEvent(CType(e.Row,SituatiescolaraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSituatiescolaraRow(ByVal row As SituatiescolaraRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Situatiescolara = New Situatiescolara
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SituatiescolaraDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class SituatiescolaraRow
        Inherits Global.System.Data.DataRow
        
        Private tableSituatiescolara As SituatiescolaraDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSituatiescolara = CType(Me.Table,SituatiescolaraDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Nume() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.NumeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Nume' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.NumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Prenume() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.PrenumeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Prenume' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.PrenumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Clasa() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.ClasaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Clasa' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.ClasaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Diriginte() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.DiriginteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Diriginte' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.DiriginteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m1() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm1' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m2() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm2' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m3() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm3' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m4() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm4' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m5() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm5' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m6() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm6' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m7() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm7' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m8() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm8' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m9() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm9' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m10() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm10' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m11() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm11' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m12() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm12' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m13() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm13' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m14() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm14' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m15() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm15' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m16() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m16Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm16' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m17() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m17Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm17' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m17Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m18() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m18Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm18' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m18Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m19() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m19Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm19' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m19Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m20() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m20Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm20' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m21() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m21Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm21' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m21Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m22() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m22Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm22' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m22Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m23() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m23Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm23' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m23Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m24() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m24Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm24' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m24Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m25() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.m25Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm25' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.m25Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n1() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n1' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n2() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n2' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n3() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n3' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n4() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n4' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n5() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n5' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n6() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n6' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n7() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n7' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n8() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n8' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n9() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n9' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n10() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n10' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n11() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n11' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n12() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n12' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n13() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n13' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n14() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n14' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n15() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n15' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n16() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n16Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n16' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n17() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n17Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n17' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n17Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n18() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n18Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n18' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n18Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n19() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n19Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n19' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n19Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n20() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n20Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n20' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n21() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n21Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n21' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n21Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n22() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n22Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n22' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n22Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n23() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n23Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n23' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n23Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n24() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n24Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n24' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n24Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n25() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.n25Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'n25' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.n25Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Semestrul_1() As String
            Get
                Return CType(Me(Me.tableSituatiescolara.Semestrul_1Column),String)
            End Get
            Set
                Me(Me.tableSituatiescolara.Semestrul_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Semestrul_2() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.Semestrul_2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Semestrul 2' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.Semestrul_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Medie_Anuala() As String
            Get
                Try 
                    Return CType(Me(Me.tableSituatiescolara.Medie_AnualaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Medie Anuala' in table 'Situatiescolara' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSituatiescolara.Medie_AnualaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIDNull()
            Me(Me.tableSituatiescolara.IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNumeNull() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.NumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNumeNull()
            Me(Me.tableSituatiescolara.NumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrenumeNull() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.PrenumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrenumeNull()
            Me(Me.tableSituatiescolara.PrenumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsClasaNull() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.ClasaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetClasaNull()
            Me(Me.tableSituatiescolara.ClasaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiriginteNull() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.DiriginteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiriginteNull()
            Me(Me.tableSituatiescolara.DiriginteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism1Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm1Null()
            Me(Me.tableSituatiescolara.m1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism2Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm2Null()
            Me(Me.tableSituatiescolara.m2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism3Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm3Null()
            Me(Me.tableSituatiescolara.m3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism4Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm4Null()
            Me(Me.tableSituatiescolara.m4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism5Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm5Null()
            Me(Me.tableSituatiescolara.m5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism6Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm6Null()
            Me(Me.tableSituatiescolara.m6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism7Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm7Null()
            Me(Me.tableSituatiescolara.m7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism8Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm8Null()
            Me(Me.tableSituatiescolara.m8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism9Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm9Null()
            Me(Me.tableSituatiescolara.m9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism10Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm10Null()
            Me(Me.tableSituatiescolara.m10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism11Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm11Null()
            Me(Me.tableSituatiescolara.m11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism12Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm12Null()
            Me(Me.tableSituatiescolara.m12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism13Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm13Null()
            Me(Me.tableSituatiescolara.m13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism14Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm14Null()
            Me(Me.tableSituatiescolara.m14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism15Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm15Null()
            Me(Me.tableSituatiescolara.m15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism16Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm16Null()
            Me(Me.tableSituatiescolara.m16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism17Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m17Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm17Null()
            Me(Me.tableSituatiescolara.m17Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism18Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m18Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm18Null()
            Me(Me.tableSituatiescolara.m18Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism19Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m19Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm19Null()
            Me(Me.tableSituatiescolara.m19Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism20Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm20Null()
            Me(Me.tableSituatiescolara.m20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism21Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m21Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm21Null()
            Me(Me.tableSituatiescolara.m21Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism22Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m22Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm22Null()
            Me(Me.tableSituatiescolara.m22Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism23Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m23Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm23Null()
            Me(Me.tableSituatiescolara.m23Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism24Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m24Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm24Null()
            Me(Me.tableSituatiescolara.m24Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism25Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.m25Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm25Null()
            Me(Me.tableSituatiescolara.m25Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn1Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn1Null()
            Me(Me.tableSituatiescolara.n1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn2Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn2Null()
            Me(Me.tableSituatiescolara.n2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn3Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn3Null()
            Me(Me.tableSituatiescolara.n3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn4Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn4Null()
            Me(Me.tableSituatiescolara.n4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn5Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn5Null()
            Me(Me.tableSituatiescolara.n5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn6Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn6Null()
            Me(Me.tableSituatiescolara.n6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn7Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn7Null()
            Me(Me.tableSituatiescolara.n7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn8Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn8Null()
            Me(Me.tableSituatiescolara.n8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn9Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn9Null()
            Me(Me.tableSituatiescolara.n9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn10Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn10Null()
            Me(Me.tableSituatiescolara.n10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn11Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn11Null()
            Me(Me.tableSituatiescolara.n11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn12Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn12Null()
            Me(Me.tableSituatiescolara.n12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn13Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn13Null()
            Me(Me.tableSituatiescolara.n13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn14Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn14Null()
            Me(Me.tableSituatiescolara.n14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn15Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn15Null()
            Me(Me.tableSituatiescolara.n15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn16Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn16Null()
            Me(Me.tableSituatiescolara.n16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn17Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n17Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn17Null()
            Me(Me.tableSituatiescolara.n17Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn18Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n18Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn18Null()
            Me(Me.tableSituatiescolara.n18Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn19Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n19Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn19Null()
            Me(Me.tableSituatiescolara.n19Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn20Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn20Null()
            Me(Me.tableSituatiescolara.n20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn21Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n21Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn21Null()
            Me(Me.tableSituatiescolara.n21Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn22Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n22Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn22Null()
            Me(Me.tableSituatiescolara.n22Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn23Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n23Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn23Null()
            Me(Me.tableSituatiescolara.n23Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn24Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n24Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn24Null()
            Me(Me.tableSituatiescolara.n24Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isn25Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.n25Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setn25Null()
            Me(Me.tableSituatiescolara.n25Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSemestrul_2Null() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.Semestrul_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSemestrul_2Null()
            Me(Me.tableSituatiescolara.Semestrul_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMedie_AnualaNull() As Boolean
            Return Me.IsNull(Me.tableSituatiescolara.Medie_AnualaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMedie_AnualaNull()
            Me(Me.tableSituatiescolara.Medie_AnualaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class SituatiescolaraRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SituatiescolaraRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As SituatiescolaraRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As SituatiescolaraRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace SituatiescolaraTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SituatiescolaraTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Situatiescolara"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("Nume", "Nume")
            tableMapping.ColumnMappings.Add("Prenume", "Prenume")
            tableMapping.ColumnMappings.Add("Clasa", "Clasa")
            tableMapping.ColumnMappings.Add("Diriginte", "Diriginte")
            tableMapping.ColumnMappings.Add("m1", "m1")
            tableMapping.ColumnMappings.Add("m2", "m2")
            tableMapping.ColumnMappings.Add("m3", "m3")
            tableMapping.ColumnMappings.Add("m4", "m4")
            tableMapping.ColumnMappings.Add("m5", "m5")
            tableMapping.ColumnMappings.Add("m6", "m6")
            tableMapping.ColumnMappings.Add("m7", "m7")
            tableMapping.ColumnMappings.Add("m8", "m8")
            tableMapping.ColumnMappings.Add("m9", "m9")
            tableMapping.ColumnMappings.Add("m10", "m10")
            tableMapping.ColumnMappings.Add("m11", "m11")
            tableMapping.ColumnMappings.Add("m12", "m12")
            tableMapping.ColumnMappings.Add("m13", "m13")
            tableMapping.ColumnMappings.Add("m14", "m14")
            tableMapping.ColumnMappings.Add("m15", "m15")
            tableMapping.ColumnMappings.Add("m16", "m16")
            tableMapping.ColumnMappings.Add("m17", "m17")
            tableMapping.ColumnMappings.Add("m18", "m18")
            tableMapping.ColumnMappings.Add("m19", "m19")
            tableMapping.ColumnMappings.Add("m20", "m20")
            tableMapping.ColumnMappings.Add("m21", "m21")
            tableMapping.ColumnMappings.Add("m22", "m22")
            tableMapping.ColumnMappings.Add("m23", "m23")
            tableMapping.ColumnMappings.Add("m24", "m24")
            tableMapping.ColumnMappings.Add("m25", "m25")
            tableMapping.ColumnMappings.Add("n1", "n1")
            tableMapping.ColumnMappings.Add("n2", "n2")
            tableMapping.ColumnMappings.Add("n3", "n3")
            tableMapping.ColumnMappings.Add("n4", "n4")
            tableMapping.ColumnMappings.Add("n5", "n5")
            tableMapping.ColumnMappings.Add("n6", "n6")
            tableMapping.ColumnMappings.Add("n7", "n7")
            tableMapping.ColumnMappings.Add("n8", "n8")
            tableMapping.ColumnMappings.Add("n9", "n9")
            tableMapping.ColumnMappings.Add("n10", "n10")
            tableMapping.ColumnMappings.Add("n11", "n11")
            tableMapping.ColumnMappings.Add("n12", "n12")
            tableMapping.ColumnMappings.Add("n13", "n13")
            tableMapping.ColumnMappings.Add("n14", "n14")
            tableMapping.ColumnMappings.Add("n15", "n15")
            tableMapping.ColumnMappings.Add("n16", "n16")
            tableMapping.ColumnMappings.Add("n17", "n17")
            tableMapping.ColumnMappings.Add("n18", "n18")
            tableMapping.ColumnMappings.Add("n19", "n19")
            tableMapping.ColumnMappings.Add("n20", "n20")
            tableMapping.ColumnMappings.Add("n21", "n21")
            tableMapping.ColumnMappings.Add("n22", "n22")
            tableMapping.ColumnMappings.Add("n23", "n23")
            tableMapping.ColumnMappings.Add("n24", "n24")
            tableMapping.ColumnMappings.Add("n25", "n25")
            tableMapping.ColumnMappings.Add("Semestrul 1", "Semestrul 1")
            tableMapping.ColumnMappings.Add("Semestrul 2", "Semestrul 2")
            tableMapping.ColumnMappings.Add("Medie Anuala", "Medie Anuala")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Situatiescolara] ([ID], [Nume], [Prenume], [Clasa], [Diriginte"& _ 
                "], [m1], [m2], [m3], [m4], [m5], [m6], [m7], [m8], [m9], [m10], [m11], [m12], [m"& _ 
                "13], [m14], [m15], [m16], [m17], [m18], [m19], [m20], [m21], [m22], [m23], [m24]"& _ 
                ", [m25], [n1], [n2], [n3], [n4], [n5], [n6], [n7], [n8], [n9], [n10], [n11], [n1"& _ 
                "2], [n13], [n14], [n15], [n16], [n17], [n18], [n19], [n20], [n21], [n22], [n23],"& _ 
                " [n24], [n25], [Semestrul 1], [Semestrul 2], [Medie Anuala]) VALUES (@ID, @Nume,"& _ 
                " @Prenume, @Clasa, @Diriginte, @m1, @m2, @m3, @m4, @m5, @m6, @m7, @m8, @m9, @m10"& _ 
                ", @m11, @m12, @m13, @m14, @m15, @m16, @m17, @m18, @m19, @m20, @m21, @m22, @m23, "& _ 
                "@m24, @m25, @n1, @n2, @n3, @n4, @n5, @n6, @n7, @n8, @n9, @n10, @n11, @n12, @n13,"& _ 
                " @n14, @n15, @n16, @n17, @n18, @n19, @n20, @n21, @n22, @n23, @n24, @n25, @Semest"& _ 
                "rul_1, @Semestrul_2, @Medie_Anuala)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nume", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nume", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Prenume", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Prenume", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Clasa", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Clasa", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Diriginte", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Diriginte", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m12", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m13", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m14", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m14", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m15", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m15", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m16", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m16", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m17", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m17", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m18", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m18", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m19", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m19", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m20", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m20", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m21", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m21", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m22", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m22", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m23", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m23", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m24", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m24", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m25", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m25", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n12", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n13", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n14", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n14", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n15", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n15", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n16", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n16", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n17", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n17", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n18", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n18", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n19", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n19", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n20", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n20", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n21", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n21", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n22", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n22", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n23", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n23", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n24", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n24", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@n25", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "n25", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Semestrul_1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Semestrul 1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Semestrul_2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Semestrul 2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Medie_Anuala", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Medie Anuala", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.ManagementBook___gestionare_C.N.D.V.My.MySettings.Default.ManagementbookConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, Nume, Prenume, Clasa, Diriginte, m1, m2, m3, m4, m5, m6, m7, m8, m9, m"& _ 
                "10, m11, m12, m13, m14, m15, m16, m17, m18, m19, m20, m21, m22, m23, m24, m25, n"& _ 
                "1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, "& _ 
                "n19, n20, n21, n22, n23, n24, n25, [Semestrul 1], [Semestrul 2], [Medie Anuala] "& _ 
                "FROM dbo.Situatiescolara"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Situatiescolara.SituatiescolaraDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As Situatiescolara.SituatiescolaraDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As Situatiescolara.SituatiescolaraDataTable = New Situatiescolara.SituatiescolaraDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As Situatiescolara.SituatiescolaraDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As Situatiescolara) As Integer
            Return Me.Adapter.Update(dataSet, "Situatiescolara")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ID As String,  _
                    ByVal Nume As String,  _
                    ByVal Prenume As String,  _
                    ByVal Clasa As String,  _
                    ByVal Diriginte As String,  _
                    ByVal m1 As String,  _
                    ByVal m2 As String,  _
                    ByVal m3 As String,  _
                    ByVal m4 As String,  _
                    ByVal m5 As String,  _
                    ByVal m6 As String,  _
                    ByVal m7 As String,  _
                    ByVal m8 As String,  _
                    ByVal m9 As String,  _
                    ByVal m10 As String,  _
                    ByVal m11 As String,  _
                    ByVal m12 As String,  _
                    ByVal m13 As String,  _
                    ByVal m14 As String,  _
                    ByVal m15 As String,  _
                    ByVal m16 As String,  _
                    ByVal m17 As String,  _
                    ByVal m18 As String,  _
                    ByVal m19 As String,  _
                    ByVal m20 As String,  _
                    ByVal m21 As String,  _
                    ByVal m22 As String,  _
                    ByVal m23 As String,  _
                    ByVal m24 As String,  _
                    ByVal m25 As String,  _
                    ByVal n1 As String,  _
                    ByVal n2 As String,  _
                    ByVal n3 As String,  _
                    ByVal n4 As String,  _
                    ByVal n5 As String,  _
                    ByVal n6 As String,  _
                    ByVal n7 As String,  _
                    ByVal n8 As String,  _
                    ByVal n9 As String,  _
                    ByVal n10 As String,  _
                    ByVal n11 As String,  _
                    ByVal n12 As String,  _
                    ByVal n13 As String,  _
                    ByVal n14 As String,  _
                    ByVal n15 As String,  _
                    ByVal n16 As String,  _
                    ByVal n17 As String,  _
                    ByVal n18 As String,  _
                    ByVal n19 As String,  _
                    ByVal n20 As String,  _
                    ByVal n21 As String,  _
                    ByVal n22 As String,  _
                    ByVal n23 As String,  _
                    ByVal n24 As String,  _
                    ByVal n25 As String,  _
                    ByVal Semestrul_1 As String,  _
                    ByVal Semestrul_2 As String,  _
                    ByVal Medie_Anuala As String) As Integer
            If (ID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID,String)
            End If
            If (Nume Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Nume,String)
            End If
            If (Prenume Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Prenume,String)
            End If
            If (Clasa Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Clasa,String)
            End If
            If (Diriginte Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Diriginte,String)
            End If
            If (m1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(m1,String)
            End If
            If (m2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(m2,String)
            End If
            If (m3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(m3,String)
            End If
            If (m4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(m4,String)
            End If
            If (m5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(m5,String)
            End If
            If (m6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(m6,String)
            End If
            If (m7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(m7,String)
            End If
            If (m8 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(m8,String)
            End If
            If (m9 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(m9,String)
            End If
            If (m10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(m10,String)
            End If
            If (m11 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(m11,String)
            End If
            If (m12 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(m12,String)
            End If
            If (m13 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(m13,String)
            End If
            If (m14 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(m14,String)
            End If
            If (m15 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(m15,String)
            End If
            If (m16 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(m16,String)
            End If
            If (m17 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(m17,String)
            End If
            If (m18 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(m18,String)
            End If
            If (m19 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(m19,String)
            End If
            If (m20 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(m20,String)
            End If
            If (m21 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(m21,String)
            End If
            If (m22 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(m22,String)
            End If
            If (m23 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(m23,String)
            End If
            If (m24 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(m24,String)
            End If
            If (m25 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(m25,String)
            End If
            If (n1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(n1,String)
            End If
            If (n2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(n2,String)
            End If
            If (n3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(n3,String)
            End If
            If (n4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(n4,String)
            End If
            If (n5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(n5,String)
            End If
            If (n6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(n6,String)
            End If
            If (n7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(n7,String)
            End If
            If (n8 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(n8,String)
            End If
            If (n9 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(n9,String)
            End If
            If (n10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(n10,String)
            End If
            If (n11 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(n11,String)
            End If
            If (n12 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(n12,String)
            End If
            If (n13 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(n13,String)
            End If
            If (n14 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(n14,String)
            End If
            If (n15 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(n15,String)
            End If
            If (n16 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(n16,String)
            End If
            If (n17 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(n17,String)
            End If
            If (n18 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(n18,String)
            End If
            If (n19 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(n19,String)
            End If
            If (n20 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(n20,String)
            End If
            If (n21 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(n21,String)
            End If
            If (n22 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(n22,String)
            End If
            If (n23 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(n23,String)
            End If
            If (n24 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(n24,String)
            End If
            If (n25 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(n25,String)
            End If
            If (Semestrul_1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Semestrul_1")
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(Semestrul_1,String)
            End If
            If (Semestrul_2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(Semestrul_2,String)
            End If
            If (Medie_Anuala Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(Medie_Anuala,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _situatiescolaraTableAdapter As SituatiescolaraTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property SituatiescolaraTableAdapter() As SituatiescolaraTableAdapter
            Get
                Return Me._situatiescolaraTableAdapter
            End Get
            Set
                Me._situatiescolaraTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._situatiescolaraTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._situatiescolaraTableAdapter.Connection) Is Nothing)) Then
                    Return Me._situatiescolaraTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._situatiescolaraTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As Situatiescolara, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._situatiescolaraTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet._Situatiescolara.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._situatiescolaraTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateInsertedRows(ByVal dataSet As Situatiescolara, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._situatiescolaraTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet._Situatiescolara.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._situatiescolaraTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateDeletedRows(ByVal dataSet As Situatiescolara, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._situatiescolaraTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet._Situatiescolara.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._situatiescolaraTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function UpdateAll(ByVal dataSet As Situatiescolara) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._situatiescolaraTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._situatiescolaraTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._situatiescolaraTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._situatiescolaraTableAdapter, Me._situatiescolaraTableAdapter.Connection)
                    Me._situatiescolaraTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._situatiescolaraTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._situatiescolaraTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._situatiescolaraTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._situatiescolaraTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._situatiescolaraTableAdapter) Is Nothing) Then
                    Me._situatiescolaraTableAdapter.Connection = CType(revertConnections(Me._situatiescolaraTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._situatiescolaraTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Private Function IsChildAndParent(ByVal child As Global.System.Data.DataRow, ByVal parent As Global.System.Data.DataRow) As Boolean
                Global.System.Diagnostics.Debug.Assert((Not (child) Is Nothing))
                Global.System.Diagnostics.Debug.Assert((Not (parent) Is Nothing))
                Dim newParent As Global.System.Data.DataRow = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (newParent) Is Nothing)  _
                            AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                            AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                    newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop
                If (newParent Is Nothing) Then
                    newParent = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)
                    Do While ((Not (newParent) Is Nothing)  _
                                AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                                AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                        newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If
                If Object.ReferenceEquals(newParent, parent) Then
                    Return true
                End If
                Return false
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                'Is row1 the child or grandchild of row2
                If Me.IsChildAndParent(row1, row2) Then
                    Return Me._childFirst
                End If

                'Is row2 the child or grandchild of row1
                If Me.IsChildAndParent(row2, row1) Then
                    Return (-1 * Me._childFirst)
                End If
                Return 0
            End Function
        End Class
    End Class
End Namespace
